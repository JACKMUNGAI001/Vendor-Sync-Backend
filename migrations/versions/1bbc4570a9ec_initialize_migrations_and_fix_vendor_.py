"""Initialize migrations and fix vendor-quote relationships

Revision ID: 1bbc4570a9ec
Revises: 
Create Date: 2025-10-30 16:50:14.105244

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1bbc4570a9ec'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roles')
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_column('description')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('first_name', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('last_name', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('phone', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.drop_column('name')

    with op.batch_alter_table('vendor', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('phone', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('company_name', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('contact_person', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=True))
        batch_op.alter_column('address',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.drop_constraint('vendor_contact_email_key', type_='unique')
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.drop_constraint('vendor_user_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_id')
        batch_op.drop_column('rating')
        batch_op.drop_column('contact_email')
        batch_op.drop_column('postal_code')
        batch_op.drop_column('contact_phone')
        batch_op.drop_column('city')
        batch_op.drop_column('total_orders')
        batch_op.drop_column('tax_id')
        batch_op.drop_column('payment_terms')
        batch_op.drop_column('is_approved')
        batch_op.drop_column('business_type')
        batch_op.drop_column('country')
        batch_op.drop_column('description')
        batch_op.drop_column('state')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vendor', schema=None) as batch_op:
        batch_op.add_column(sa.Column('state', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('business_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('is_approved', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('payment_terms', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('tax_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('total_orders', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('contact_phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('postal_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('contact_email', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('vendor_user_id_fkey', 'user', ['user_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('vendor_contact_email_key', ['contact_email'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('address',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.drop_column('is_verified')
        batch_op.drop_column('contact_person')
        batch_op.drop_column('company_name')
        batch_op.drop_column('phone')
        batch_op.drop_column('email')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=True))
        batch_op.alter_column('email',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('is_active')
        batch_op.drop_column('phone')
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True))

    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    sa.UniqueConstraint('name', name='roles_name_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
